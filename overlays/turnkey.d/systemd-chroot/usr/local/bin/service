#!/bin/bash -e

# Temporary TKLDev build time service wrapper.
#
# Should deal with common build time calls to "service" with common actions
# If the service isn't recognised, then will fall back to /usr/bin/service

stop_start() {
    _action="$1" # stop|start|restart
    shift
    _service="$1" # service name - only used with stop|restart
    shift
    _command="$*" # command to run - only used with start|restart

    case $_action in
        stop|restart)
            if pid="$(pgrep "$_service")"; then
                if [[ "$_service" == "ghost" ]]; then
                    pid="$pid $(pgrep node) $(pgrep sudo)"
                elif [[ "$_service" == "webmin" ]]; then
                    pid="$(pgrep miniserv.pl)"
                fi
                kill "$pid"
            else
                # it's stopped, technicallyâ€¦
                echo "WARNING: stop_start could not find pid for $_service!"
            fi
            ;;&
        start|restart)
            # this should background processes that do not background themselves
            # while doing no harm where the process does background itself
            $_command & pid=$!
            # poke it to see if it's alive after 1s
            # if not, reap and fail
            sleep 1
            kill -0 "$pid" || { wait; return 1; }
            ;;
        stop)
            # catch stop after 'stop|restart' falls through
            ;;
        *)
            echo "Unrecognised action: $_action" >&2
            exit 1
            ;;
    esac
}

case "$1" in
    webmin)
        export PERLLIB=/usr/share/webmin
        stop_start "$2" "$1" \
            /usr/share/webmin/miniserv.pl /etc/webmin/miniserv.conf
        ;;

    apache2)
        if [[ "$2" == "reload" ]]; then
            APACHE_STARTED_BY_SYSTEMD=y /usr/sbin/apache2ctl restart
        else
            APACHE_STARTED_BY_SYSTEMD=y /usr/sbin/apache2ctl "$2"
        fi
        ;;

    mysql|mariadb)
        if [[ -f /etc/init.d/mariadb ]]; then
            /etc/init.d/mariadb "$2"
        elif [[ -f /etc/init.d/mysql ]]; then
            /etc/init.d/mysql "$2"
        else
            echo "No mariadb or mysql init script found" >&2
            exit 1
        fi
        ;;

    zoneminder)
        echo "ignoring zoneminder ..."
        ;;

    odoo)
        stop_start "$2" "$1" \
            runuser odoo -s /bin/bash -c "/usr/bin/odoo --config /etc/odoo/odoo.conf --logfile /var/log/odoo/odoo-server.log"
        ;;

    gitlab-runsvdir*)
        stop_start "$2" "$1" \
            /opt/gitlab/embedded/bin/runsvdir-start
        ;;

    ghost)
        stop_start "$2" "$1" \
            cd /opt/ghost; sudo -u ghost /usr/local/bin/node /usr/local/bin/ghost start
        ;;

    mattermost)
        stop_start "$2" "$1" \
            /opt/mattermost/bin/mattermost
        ;;

    redis)
        stop_start "$2" "$1" \
            runuser www-data -s /bin/bash -c "/usr/sbin/php-fpm?.? --daemonize --fpm-config /etc/php/?.?/fpm/php-fpm.conf"
        ;;

    *)
        echo "$(basename "$0") tkldev service wrapper falling back to /usr/sbin/service"
        /usr/sbin/service "$@"
        ;;
esac
