#!/bin/bash -ex

if [ $HOSTNAME ]; then
    APPNAME=$HOSTNAME
    [ "$APPNAME" == "rails" ] && APPNAME=railsapp ## namespace conflict
else
    echo "'$(basename $0)' error: hostname not defined"
    return 1
fi

DB_USER=$APPNAME
DB_PASS=$(mcookie)
WEBROOT=/var/www/$APPNAME
LOGSDIR=/var/log/$APPNAME

[ "$FAB_HTTP_PROXY" ] && export HTTP_PROXY=$FAB_HTTP_PROXY
GEMOPTS="--no-rdoc --no-ri"

git clone https://github.com/rbenv/rbenv.git /usr/local/rbenv --depth=1
git clone https://github.com/rbenv/ruby-build.git /usr/local/rbenv/plugins/ruby-build --depth=1
/usr/local/rbenv/plugins/ruby-build/install.sh

# configuration for rbenv
cat << 'EOF' >> /root/.bashrc.d/rbenv
export RBENV_ROOT=/usr/local/rbenv
export PATH="$RBENV_ROOT/bin:$PATH"
eval "$(rbenv init -)"
EOF
# source rbenv.conf into shell
chmod +x /root/.bashrc.d/rbenv
. /root/.bashrc.d/rbenv

mkdir -p /usr/local/rbenv/rbenv.d/rehash
cat << 'EOF' >> /usr/local/rbenv/rbenv.d/rehash/gem-symlinks.bash
#!/bin/bash

SHIM_PATH='/usr/local/rbenv/shims'

for shim in ${SHIM_PATH}/*; do
  ln -sf "${shim}" "/usr/local/bin/$( basename ${shim} )"
done
EOF

chmod +x /usr/local/rbenv/rbenv.d/rehash/gem-symlinks.bash

MAKE_OPTS="-j$(nproc)" RUBY_CONFIGURE_OPTS=--disable-install-doc rbenv install 2.4.3
rbenv global 2.4.3

gem update --system

gem install $GEMOPTS rack
gem install $GEMOPTS rails
gem install $GEMOPTS bundler --force
gem install $GEMOPTS passenger
gem install $GEMOPTS rake
gem install $GEMOPTS pg
gem install $GEMOPTS execjs

rbenv rehash

# build and configure passenger
passenger-install-apache2-module --auto
PASSENGER_ROOT=$(echo $(ls -d /usr/local/rbenv/versions/*/lib/ruby/gems/*/gems/passenger*))
sed -i "s|PASSENGER_ROOT|$PASSENGER_ROOT|g" /etc/apache2/mods-available/passenger.*

# start mysql server
service postgresql start

su postgres -c "createuser --no-superuser --createdb --no-createrole $DB_USER"
su postgres -c "psql postgres" <<< "alter user $DB_USER with encrypted password '$DB_PASS';"

# create databases for each environment
for DB_ENV in test development production; do
    DB_NAME=${APPNAME}_${DB_ENV}
    su postgres -c "createdb --owner $DB_USER -EUTF8 $DB_NAME"
done

# seed rails application (3.x requires new)
cd /var/www
if $(rails --version | grep -q "Rails 2.3"); then
    rails $APPNAME -d mysql --skip
else
    rails new $APPNAME -d mysql --skip
fi
unset HTTP_PROXY

CONF=$WEBROOT/config/database.yml
sed -i "s|username:.*|username: $DB_USER|g" $CONF
sed -i "s|password:.*|password: $DB_PASS|g" $CONF

# move logs to proper place
mv $WEBROOT/log $LOGSDIR
ln -s $LOGSDIR $WEBROOT/log

# configure permissions
chown -R root:www-data $WEBROOT
chown -R www-data:www-data $WEBROOT/tmp
chown -R www-data:www-data $LOGSDIR

# apache configuration
a2enmod rewrite
a2enmod proxy_balancer
a2enmod proxy_http
a2enmod proxy
a2enmod headers
a2enmod passenger

a2dissite 000-default

mv /etc/apache2/conf/rails.conf /etc/apache2/conf/$APPNAME.conf
sed -i "s|@APPNAME@|$APPNAME|g" /etc/apache2/conf/$APPNAME.conf

mv /etc/apache2/sites-available/rails.conf /etc/apache2/sites-available/$APPNAME.conf
sed -i "s|@APPNAME@|$APPNAME|g" /etc/apache2/sites-available/$APPNAME.conf

mv /etc/logrotate.d/rails /etc/logrotate.d/$APPNAME
sed -i "s|@APPNAME@|$APPNAME|g" /etc/logrotate.d/$APPNAME

a2ensite $APPNAME

service postgresql stop

